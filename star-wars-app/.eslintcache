[{"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\index.js":"1","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\App.js":"2","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\utils\\utils.js":"3","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\Nav.js":"4","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\hooks\\hooks.js":"5","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\characters\\SingleCharacter.js":"6","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\characters\\Characters.js":"7","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\films\\SingleFilm.js":"8","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\films\\Films.js":"9","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\index.js":"10","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\App.js":"11","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\Nav.js":"12","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\characters\\Characters.js":"13","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\films\\SingleFilm.js":"14","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\films\\Films.js":"15","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\utils\\utils.js":"16","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\hooks\\hooks.js":"17","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\starships\\Starships.js":"18","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\starships\\SingleStarship.js":"19","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\species\\SingleSpecies.js":"20","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\species\\Species.js":"21","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\planets\\Planets.js":"22","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\planets\\SinglePlanet.js":"23","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\common-styles\\Loader.js":"24","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\characters\\SingleCharacter.js":"25","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\home\\Home.js":"26"},{"size":153,"mtime":1607431544840,"results":"27","hashOfConfig":"28"},{"size":884,"mtime":1607537889823,"results":"29","hashOfConfig":"28"},{"size":172,"mtime":1607515338285,"results":"30","hashOfConfig":"28"},{"size":293,"mtime":1607515441153,"results":"31","hashOfConfig":"28"},{"size":161,"mtime":1607536799337,"results":"32","hashOfConfig":"28"},{"size":1447,"mtime":1607537900496,"results":"33","hashOfConfig":"28"},{"size":1179,"mtime":1607537754522,"results":"34","hashOfConfig":"28"},{"size":665,"mtime":1607537846918,"results":"35","hashOfConfig":"28"},{"size":1104,"mtime":1607537804884,"results":"36","hashOfConfig":"28"},{"size":153,"mtime":1607431544840,"results":"37","hashOfConfig":"38"},{"size":6901,"mtime":1610633028706,"results":"39","hashOfConfig":"38"},{"size":1979,"mtime":1607945752882,"results":"40","hashOfConfig":"38"},{"size":6553,"mtime":1610116193627,"results":"41","hashOfConfig":"38"},{"size":4155,"mtime":1610100282629,"results":"42","hashOfConfig":"38"},{"size":5410,"mtime":1610116485041,"results":"43","hashOfConfig":"38"},{"size":539,"mtime":1608908779119,"results":"44","hashOfConfig":"38"},{"size":1419,"mtime":1607597510532,"results":"45","hashOfConfig":"38"},{"size":3297,"mtime":1610116578164,"results":"46","hashOfConfig":"38"},{"size":4172,"mtime":1610116707783,"results":"47","hashOfConfig":"38"},{"size":2217,"mtime":1607608184707,"results":"48","hashOfConfig":"38"},{"size":633,"mtime":1607595440698,"results":"49","hashOfConfig":"38"},{"size":629,"mtime":1607606873710,"results":"50","hashOfConfig":"38"},{"size":2638,"mtime":1607608461070,"results":"51","hashOfConfig":"38"},{"size":157,"mtime":1610115843634,"results":"52","hashOfConfig":"38"},{"size":4400,"mtime":1610116034229,"results":"53","hashOfConfig":"38"},{"size":26868,"mtime":1610810727822,"results":"54","hashOfConfig":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1493bba",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1bqzyod",{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\index.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\App.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\utils\\utils.js",[],["116","117"],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\Nav.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\hooks\\hooks.js",["118","119","120","121"],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\characters\\SingleCharacter.js",["122","123"],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\characters\\Characters.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\films\\SingleFilm.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\films\\Films.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\index.js",[],["124","125"],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\App.js",["126","127","128","129","130","131","132","133","134"],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\Nav.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\characters\\Characters.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\films\\SingleFilm.js",["135","136","137","138","139"],"import { useParams, Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport poster from \"../../utils/resources/posters/a new hope.jpg\";\r\nimport { useSpecificResult } from \"../../hooks/hooks\";\r\nimport \"./SingleFilm.css\";\r\nimport Loader from \"../common-styles/Loader\";\r\n\r\nfunction SingleFilm(props) {\r\n  const { id } = useParams();\r\n  const { charactersMap, planetsMap, starshipsMap, isReady } = props;\r\n  const [characters, setCharacters] = useState([]);\r\n  const [planets, setPlanets] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n  const [isAllReady, setIsAllReady] = useState(false);\r\n\r\n  const [isLoadingFilm, filmInfo, filmError] = useSpecificResult(\r\n    `https://swapi.dev/api/films/${id}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!isLoadingFilm && Object.keys(filmInfo).length !== 0 && isReady) {\r\n      Object.values(charactersMap).map((character) => {\r\n        if (filmInfo.characters.includes(character.url)) {\r\n          setCharacters((prevArr) => [...prevArr, character]);\r\n        }\r\n      });\r\n      Object.values(starshipsMap).map((starship) => {\r\n        if (filmInfo.starships.includes(starship.url)) {\r\n          setStarships((prevArr) => [...prevArr, starship]);\r\n        }\r\n      });\r\n      Object.values(planetsMap).map((planet) => {\r\n        if (filmInfo.planets.includes(planet.url)) {\r\n          setPlanets((prevArr) => [...prevArr, planet]);\r\n        }\r\n      });\r\n      setIsAllReady(true);\r\n    }\r\n  }, [isLoadingFilm, isReady]);\r\n\r\n  return (\r\n    <div>\r\n      {!isAllReady ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"content-info\">\r\n          <div className=\"poster-container\">\r\n            <div className=\"image-circle single-circ\">\r\n              <div id=\"img-design\">\r\n                <img className=\"image-img single-img\" src={poster} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"film-container\">\r\n            <div className=\"left-info-col\">\r\n              <h1 className=\"film-name-header\">{filmInfo.title}</h1>\r\n              <div className=\"ep-dir-row\">\r\n                <div className=\"extra-r-padd\">\r\n                  Episode: {filmInfo.episode_id}\r\n                </div>\r\n                <div>Director: {filmInfo.director}</div>\r\n              </div>\r\n              <div>Release Date: {filmInfo.release_date}</div>\r\n            </div>\r\n            <div className=\"information-card right-info-col\">\r\n              <div className=\"circles\"></div>\r\n\r\n              {characters.length !== 0 ? (\r\n                <span className=\"info-col\">\r\n                  <p className=\"info-header\">characters</p>\r\n                  {characters.map((character) => (\r\n                    <p key={character.name + \"FilmNum\" + id}>\r\n                      <Link to={`/character/${character.id}`} className=\"link\">\r\n                        {character.name}\r\n                      </Link>\r\n                    </p>\r\n                  ))}\r\n                </span>\r\n              ) : null}\r\n\r\n              {planets.length !== 0 ? (\r\n                <span className=\"info-col\">\r\n                  <p className=\"info-header\">planets</p>\r\n                  {planets.map((planet) => (\r\n                    <p key={planet.name + \"FilmNum\" + id}>\r\n                      <Link to={`/planet/${planet.id}`} className=\"link\">\r\n                        {planet.name}\r\n                      </Link>\r\n                    </p>\r\n                  ))}\r\n                </span>\r\n              ) : null}\r\n\r\n              {starships.length !== 0 ? (\r\n                <span className=\"info-col\">\r\n                  <p className=\"info-header\">starships</p>\r\n                  {starships.map((starship) => (\r\n                    <p key={starship.name + \"FilmNum\" + id}>\r\n                      <Link to={`/starship/${starship.id}`} className=\"link\">\r\n                        {starship.name}\r\n                      </Link>\r\n                    </p>\r\n                  ))}\r\n                </span>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleFilm;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\films\\Films.js",["140"],"import { Link } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./films.css\";\r\nimport \"../common-styles/Cards.css\";\r\nimport poster from \"../../utils/resources/posters/a new hope.jpg\";\r\nimport arrow from \"../../utils/resources/down-arrow.svg\";\r\nimport { showFirstResults } from \"../../utils/utils\";\r\nimport Loader from \"../common-styles/Loader\";\r\n\r\nfunction Films(props) {\r\n  const [expanded, setExpanded] = useState(-1);\r\n  const { filmsInfo, charactersMap, planetsMap, starshipsMap, isReady } = props;\r\n\r\n  function handleExpand(e, index) {\r\n    if (index === expanded) {\r\n      setExpanded(-1);\r\n    } else {\r\n      setExpanded(index);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!isReady ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"mb\">\r\n          <h1 className=\"cards-header\">\r\n            <span id=\"text-Design\">Explore</span> The Films\r\n          </h1>\r\n          <div className=\"card-holder\">\r\n            {filmsInfo.map((film, index) => (\r\n              <div key={`films-page-${film.id}`} className=\"card\">\r\n                <div\r\n                  className={\r\n                    expanded === index\r\n                      ? \"single-card single-card-expanded\"\r\n                      : \"single-card film-page\"\r\n                  }\r\n                  key={film.title + \"-films\"}\r\n                >\r\n                  <div className=\"image-circle\">\r\n                    <img className=\"image-img\" src={poster} alt=\"\" />\r\n                  </div>\r\n                  <div className=\"detail-box\">\r\n                    <div className=\"left-col\">\r\n                      <Link to={`/film/${film.id}`} className=\"title-link\">\r\n                        {film.title}\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"right-col\">\r\n                      <div className=\"margin-b right-item\">\r\n                        Episode: {film.episode_id}\r\n                      </div>\r\n                      <div className=\"margin-b right-item\">\r\n                        Director: {film.director}\r\n                      </div>\r\n                      <div className=\"right-item\">\r\n                        Release date: {film.release_date}\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"expand-btn\"\r\n                      onClick={(e) => handleExpand(e, index)}\r\n                    >\r\n                      Expand\r\n                      <img src={arrow} alt=\"\" className=\"arrow-icon\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={\r\n                    expanded === index ? \"expanded\" : \"expanded not-expanded\"\r\n                  }\r\n                >\r\n                  <div className=\"columns-container\">\r\n                    <div className=\"column first\">\r\n                      <strong>Characters</strong>\r\n                      {showFirstResults(film, \"characters\", charactersMap).map(\r\n                        (character) => (\r\n                          <p\r\n                            key={`films-page-${film.id}-character-${character.id}`}\r\n                          >\r\n                            <Link\r\n                              to={`/character/${character.id}`}\r\n                              className=\"expanded-links\"\r\n                            >\r\n                              {character.name}\r\n                            </Link>\r\n                          </p>\r\n                        )\r\n                      )}\r\n                    </div>\r\n                    <div className=\"column\">\r\n                      <strong>Planets</strong>\r\n\r\n                      {showFirstResults(film, \"planets\", planetsMap).map(\r\n                        (planet) => (\r\n                          <p key={`films-page-${film.id}-planet-${planet.id}`}>\r\n                            <Link\r\n                              to={`/planet/${planet.id}`}\r\n                              className=\"expanded-links\"\r\n                            >\r\n                              {planet.name}\r\n                            </Link>\r\n                          </p>\r\n                        )\r\n                      )}\r\n                    </div>\r\n                    <div className=\"column\">\r\n                      <strong>Starships</strong>\r\n                      {showFirstResults(film, \"starships\", starshipsMap).map(\r\n                        (starship) => (\r\n                          <p\r\n                            key={`films-page-${film.id}-starship-${starship.id}`}\r\n                          >\r\n                            <Link\r\n                              to={`/starship/${starship.id}`}\r\n                              className=\"expanded-links\"\r\n                            >\r\n                              {starship.name}\r\n                            </Link>\r\n                          </p>\r\n                        )\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"read-more\">\r\n                    <Link to={`/film/${film.id}`} className=\"read-more-link\">\r\n                      Read More\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Films;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\utils\\utils.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\hooks\\hooks.js",["141"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { getIdFromUrl } from \"../utils/utils\";\r\n\r\nexport function useAllResults(url) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [info, setInfo] = useState([]);\r\n  const [error, setError] = useState();\r\n  const [nextPage, setNextPage] = useState(url);\r\n\r\n  useEffect(() => {\r\n    if (nextPage === null) {\r\n      setIsLoading(false);\r\n    } else {\r\n      setIsLoading(true);\r\n      axios\r\n        .get(nextPage)\r\n        .then((res) => {\r\n          let filmsInfo = res.data.results;\r\n          filmsInfo = filmsInfo.map((film) => {\r\n            const id = getIdFromUrl(film.url);\r\n            Object.assign(film, { id: id });\r\n            return film;\r\n          });\r\n          setInfo((prevArr) => [...prevArr, ...filmsInfo]);\r\n          setNextPage(res.data.next);\r\n        })\r\n        .catch((err) => setError(err));\r\n    }\r\n  }, [nextPage]);\r\n  return [isLoading, info, error];\r\n}\r\n\r\nexport function useSpecificResult(url) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [info, setInfo] = useState([]);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setInfo(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => setError(err));\r\n  }, []);\r\n  return [isLoading, info, error];\r\n}\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\starships\\Starships.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\starships\\SingleStarship.js",["142","143","144","145","146"],"import { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpecificResult, useAllResults } from \"../../hooks/hooks\";\r\nimport upsideDownTriangle from \"../../utils/resources/upside-down-triangle.svg\";\r\nimport \"./singleStarship.css\";\r\nimport Loader from \"../common-styles/Loader\";\r\n\r\nfunction SingleStarship(props) {\r\n  const { id } = useParams();\r\n  const [films, setFilms] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [isAllReady, setIsAllReady] = useState(false);\r\n  const { charactersMap, filmsMap, isReady } = props;\r\n\r\n  const [isLoadingStarship, starshipInfo, starshipError] = useSpecificResult(\r\n    `https://swapi.dev/api/starships/${id}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isLoadingStarship &&\r\n      Object.keys(starshipInfo).length !== 0 &&\r\n      isReady\r\n    ) {\r\n      Object.values(filmsMap).map((film) => {\r\n        if (starshipInfo.films.includes(film.url)) {\r\n          setFilms((prevArr) => [...prevArr, film]);\r\n        }\r\n      });\r\n      Object.values(charactersMap).map((character) => {\r\n        if (starshipInfo.pilots.includes(character.url)) {\r\n          setCharacters((prevArr) => [...prevArr, character]);\r\n        }\r\n      });\r\n      setIsAllReady(true);\r\n    }\r\n  }, [isLoadingStarship, isReady]);\r\n\r\n  return (\r\n    <div>\r\n      {!isAllReady ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div className=\"starship-container\">\r\n            <div className=\"starship-name\">\r\n              <div>{starshipInfo.name}</div>\r\n            </div>\r\n            <div className=\"flex-lines\">\r\n              <div className=\"back-lines left\"></div>\r\n              <div className=\"back-lines right\"></div>\r\n            </div>\r\n            <div className=\"main-details\">\r\n              <img src={upsideDownTriangle} alt=\"\" />\r\n              <div className=\"detail\">\r\n                <p>\r\n                  Cost <strong>{starshipInfo.cost_in_credits}</strong> credits\r\n                </p>\r\n                <p>\r\n                  <strong>{starshipInfo.hyperdrive_rating}</strong> hyperdrive\r\n                  rating\r\n                </p>\r\n                <p>\r\n                  <strong>{starshipInfo.max_atmosphering_speed}</strong>{\" \"}\r\n                  Atmosphere speed\r\n                </p>\r\n                <p>\r\n                  <strong>{starshipInfo.crew}</strong> crew members\r\n                </p>\r\n                <p>\r\n                  <strong>{starshipInfo.passengers}</strong> passengers\r\n                </p>\r\n                <p>\r\n                  <strong>{starshipInfo.cargo_capacity}</strong> cargo capacity\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"starship-columns\">\r\n              <span className=\"col first-col\">\r\n                <p className=\"column-header\">Films</p>\r\n                {films.length !== 0 ? (\r\n                  films.map((film) => (\r\n                    <p key={`starship-page-${starshipInfo.id}-film-${film.id}`}>\r\n                      <Link to={`/film/${film.id}`} className=\"link\">\r\n                        {film.title}\r\n                      </Link>\r\n                    </p>\r\n                  ))\r\n                ) : (\r\n                  <p>No records</p>\r\n                )}\r\n              </span>\r\n\r\n              <span className=\"col\">\r\n                <p className=\"column-header\">Pilots</p>\r\n                {characters.length !== 0 ? (\r\n                  characters.map((character) => (\r\n                    <p\r\n                      key={`starship-page-${starshipInfo.id}-character-${character.id}`}\r\n                    >\r\n                      <Link to={`/character/${character.id}`} className=\"link\">\r\n                        {character.name}\r\n                      </Link>\r\n                    </p>\r\n                  ))\r\n                ) : (\r\n                  <p>No records</p>\r\n                )}\r\n              </span>\r\n              <div className=\"faded-triangles\"></div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleStarship;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\species\\SingleSpecies.js",["147","148","149","150","151","152"],"import { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpecificResult, useAllResults } from \"../../hooks/hooks\";\r\n\r\nfunction SingleSpecies() {\r\n  const { id } = useParams();\r\n  const [films, setFilms] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  const [isLoadingSpecies, speciesInfo, speciesError] = useSpecificResult(\r\n    `https://swapi.dev/api/species/${id}`\r\n  );\r\n\r\n  const [isLoadingFilms, filmsInfo, filmsError] = useAllResults(\r\n    \"https://swapi.dev/api/films/\"\r\n  );\r\n\r\n  const [isLoadingCharacters, charactersInfo, charactersError] = useAllResults(\r\n    \"https://swapi.dev/api/people/\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isLoadingSpecies &&\r\n      !isLoadingFilms &&\r\n      !isLoadingCharacters &&\r\n      speciesInfo.length !== 0 &&\r\n      filmsInfo.length !== 0 &&\r\n      charactersInfo.length !== 0\r\n    ) {\r\n      filmsInfo.map((film) => {\r\n        if (speciesInfo.films.includes(film.url)) {\r\n          setFilms((prevArr) => [...prevArr, film]);\r\n        }\r\n      });\r\n      charactersInfo.map((character) => {\r\n        if (speciesInfo.people.includes(character.url)) {\r\n          setCharacters((prevArr) => [...prevArr, character]);\r\n        }\r\n      });\r\n    }\r\n  }, [isLoadingSpecies, isLoadingFilms, isLoadingCharacters]);\r\n\r\n  return (\r\n    <div>\r\n      {films.length === 0 ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <div>\r\n          <p>name: {speciesInfo.name}</p>\r\n          <p>classification: {speciesInfo.classification}</p>\r\n          <p>average height: {speciesInfo.average_height}</p>\r\n          <p>average lifespan: {speciesInfo.average_lifespan}</p>\r\n\r\n          <p>films</p>\r\n          {films.map((film) => (\r\n            <p key={film.title}>\r\n              <Link to={`/film/${film.id}`}>{film.title}</Link>\r\n            </p>\r\n          ))}\r\n          <p>people</p>\r\n          {characters.map((character) => (\r\n            <p key={character.name}>\r\n              <Link to={`/character/${character.id}`}>{character.name}</Link>\r\n            </p>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleSpecies;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\species\\Species.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\planets\\Planets.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\planets\\SinglePlanet.js",["153","154","155","156","157","158"],"import { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpecificResult, useAllResults } from \"../../hooks/hooks\";\r\n\r\nfunction SinglePlanet() {\r\n  const { id } = useParams();\r\n  const [films, setFilms] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  const [isLoadingPlanet, planetInfo, planetError] = useSpecificResult(\r\n    `https://swapi.dev/api/planets/${id}`\r\n  );\r\n\r\n  const [isLoadingFilms, filmsInfo, filmsError] = useAllResults(\r\n    \"https://swapi.dev/api/films/\"\r\n  );\r\n\r\n  const [isLoadingCharacters, charactersInfo, charactersError] = useAllResults(\r\n    \"https://swapi.dev/api/people/\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isLoadingPlanet &&\r\n      !isLoadingFilms &&\r\n      !isLoadingCharacters &&\r\n      planetInfo.length !== 0 &&\r\n      filmsInfo.length !== 0 &&\r\n      charactersInfo.length !== 0\r\n    ) {\r\n      filmsInfo.map((film) => {\r\n        if (planetInfo.films.includes(film.url)) {\r\n          setFilms((prevArr) => [...prevArr, film]);\r\n        }\r\n      });\r\n      charactersInfo.map((character) => {\r\n        if (planetInfo.residents.includes(character.url)) {\r\n          setCharacters((prevArr) => [...prevArr, character]);\r\n        }\r\n      });\r\n    }\r\n  }, [isLoadingPlanet, isLoadingFilms, isLoadingCharacters]);\r\n\r\n  return (\r\n    <div>\r\n      {films.length === 0 ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <div>\r\n          <p>name: {planetInfo.name}</p>\r\n          <p>population: {planetInfo.population}</p>\r\n          <p>rotation_period: {planetInfo.rotation_period}</p>\r\n          <p>orbital_period: {planetInfo.orbital_period}</p>\r\n          <p>diameter: {planetInfo.diameter}</p>\r\n          <p>climate: {planetInfo.climate}</p>\r\n          <p>diameter: {planetInfo.diameter}</p>\r\n\r\n          {films.length !== 0 ? (\r\n            <span>\r\n              <p>films</p>\r\n              {films.map((film) => (\r\n                <p key={film.title}>\r\n                  <Link to={`/film/${film.id}`}>{film.title}</Link>\r\n                </p>\r\n              ))}\r\n            </span>\r\n          ) : null}\r\n\r\n          {characters.length !== 0 ? (\r\n            <span>\r\n              <p>residents</p>\r\n              {characters.map((character) => (\r\n                <p key={character.name}>\r\n                  <Link to={`/character/${character.id}`}>\r\n                    {character.name}\r\n                  </Link>\r\n                </p>\r\n              ))}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SinglePlanet;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\common-styles\\Loader.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\characters\\SingleCharacter.js",["159","160","161","162","163"],"import { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpecificResult, useAllResults } from \"../../hooks/hooks\";\r\nimport { getIdFromUrl } from \"../../utils/utils\";\r\n\r\nimport Loader from \"../common-styles/Loader\";\r\nimport \"./SingleCharacter.css\";\r\n\r\nfunction SingleCharacter(props) {\r\n  const { id } = useParams();\r\n  const [films, setFilms] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n  const [isAllReady, setIsAllReady] = useState(false);\r\n  const { planetsMap, starshipsMap, charactersMap, filmsMap, isReady } = props;\r\n\r\n  const [isLoadingCharacter, characterInfo, characterError] = useSpecificResult(\r\n    `https://swapi.dev/api/people/${id}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isLoadingCharacter &&\r\n      Object.keys(characterInfo).length !== 0 &&\r\n      isReady\r\n    ) {\r\n      Object.values(filmsMap).map((film) => {\r\n        if (characterInfo.films.includes(film.url)) {\r\n          setFilms((prevArr) => [...prevArr, film]);\r\n        }\r\n        return;\r\n      });\r\n\r\n      Object.values(starshipsMap).map((starship) => {\r\n        if (characterInfo.starships.includes(starship.url)) {\r\n          setStarships((prevArr) => [...prevArr, starship]);\r\n        }\r\n        return;\r\n      });\r\n      setIsAllReady(true);\r\n    }\r\n  }, [isLoadingCharacter, isReady]);\r\n\r\n  return (\r\n    <div>\r\n      {!isAllReady ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"single-character-page\">\r\n          <div className=\"circle-bg\">\r\n            <div className=\"image-circle avatar-circle\">\r\n              <img\r\n                className=\"image-img avatar\"\r\n                src={charactersMap[id].imagePath}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"character-name\">{characterInfo.name}</div>\r\n            <div className=\"white-circle\"></div>\r\n            <div className=\"container\">\r\n              <div className=\"details\">\r\n                <div className=\"first col\">\r\n                  <p>\r\n                    <strong>Height: </strong>\r\n                    {characterInfo.height}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Mass: </strong>\r\n                    {characterInfo.mass}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Gender: </strong>\r\n                    {characterInfo.gender}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p>\r\n                    <strong>Birth Year: </strong>\r\n                    {characterInfo.birth_year}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Homeworld: </strong>\r\n                    {planetsMap[getIdFromUrl(characterInfo.homeworld)].name}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"second-row\">\r\n                <div className=\"films\">\r\n                  <strong>Films</strong>\r\n                  {films.map((film) => (\r\n                    <p key={`character-${id}-film-${film.id}`}>\r\n                      <Link to={`/film/${film.id}`} className=\"expanded-links\">\r\n                        {film.title}\r\n                      </Link>\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n                <div className=\"starships\">\r\n                  <strong>Starships</strong>\r\n                  {characterInfo.starships.length > 0 ? (\r\n                    starships.map((starship) => (\r\n                      <p key={`character-${id}-starship-${starship.id}`}>\r\n                        <Link\r\n                          to={`/starship/${starship.id}`}\r\n                          className=\"expanded-links\"\r\n                        >\r\n                          {starship.name}\r\n                        </Link>\r\n                      </p>\r\n                    ))\r\n                  ) : (\r\n                    <p>No starships under my command</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"red-circle\"></div>\r\n            <div className=\"yellow-circle\"></div>\r\n            <div className=\"green-circle\"></div>\r\n            <div className=\"blue-circle\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleCharacter;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\home\\Home.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":18},{"ruleId":"168","severity":1,"message":"172","line":1,"column":20,"nodeType":"170","messageId":"171","endLine":1,"endColumn":29},{"ruleId":"168","severity":1,"message":"173","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":13},{"ruleId":"168","severity":1,"message":"174","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":22},{"ruleId":"175","severity":1,"message":"176","line":19,"column":38,"nodeType":"177","messageId":"178","endLine":19,"endColumn":40},{"ruleId":"179","severity":1,"message":"180","line":32,"column":6,"nodeType":"181","endLine":32,"endColumn":8,"suggestions":"182"},{"ruleId":"164","replacedBy":"183"},{"ruleId":"166","replacedBy":"184"},{"ruleId":"168","severity":1,"message":"185","line":9,"column":8,"nodeType":"170","messageId":"171","endLine":9,"endColumn":15},{"ruleId":"168","severity":1,"message":"186","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":21},{"ruleId":"168","severity":1,"message":"187","line":11,"column":8,"nodeType":"170","messageId":"171","endLine":11,"endColumn":15},{"ruleId":"168","severity":1,"message":"188","line":12,"column":8,"nodeType":"170","messageId":"171","endLine":12,"endColumn":20},{"ruleId":"168","severity":1,"message":"189","line":26,"column":37,"nodeType":"170","messageId":"171","endLine":26,"endColumn":47},{"ruleId":"168","severity":1,"message":"190","line":30,"column":47,"nodeType":"170","messageId":"171","endLine":30,"endColumn":62},{"ruleId":"168","severity":1,"message":"191","line":34,"column":41,"nodeType":"170","messageId":"171","endLine":34,"endColumn":52},{"ruleId":"168","severity":1,"message":"192","line":38,"column":45,"nodeType":"170","messageId":"171","endLine":38,"endColumn":58},{"ruleId":"168","severity":1,"message":"193","line":42,"column":41,"nodeType":"170","messageId":"171","endLine":42,"endColumn":53},{"ruleId":"168","severity":1,"message":"194","line":16,"column":35,"nodeType":"170","messageId":"171","endLine":16,"endColumn":44},{"ruleId":"175","severity":1,"message":"176","line":22,"column":52,"nodeType":"177","messageId":"178","endLine":22,"endColumn":54},{"ruleId":"175","severity":1,"message":"176","line":27,"column":50,"nodeType":"177","messageId":"178","endLine":27,"endColumn":52},{"ruleId":"175","severity":1,"message":"176","line":32,"column":46,"nodeType":"177","messageId":"178","endLine":32,"endColumn":48},{"ruleId":"179","severity":1,"message":"195","line":39,"column":6,"nodeType":"181","endLine":39,"endColumn":30,"suggestions":"196"},{"ruleId":"168","severity":1,"message":"172","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"197","line":49,"column":6,"nodeType":"181","endLine":49,"endColumn":8,"suggestions":"198"},{"ruleId":"168","severity":1,"message":"199","line":4,"column":29,"nodeType":"170","messageId":"171","endLine":4,"endColumn":42},{"ruleId":"168","severity":1,"message":"192","line":16,"column":43,"nodeType":"170","messageId":"171","endLine":16,"endColumn":56},{"ruleId":"175","severity":1,"message":"176","line":26,"column":42,"nodeType":"177","messageId":"178","endLine":26,"endColumn":44},{"ruleId":"175","severity":1,"message":"176","line":31,"column":52,"nodeType":"177","messageId":"178","endLine":31,"endColumn":54},{"ruleId":"179","severity":1,"message":"200","line":38,"column":6,"nodeType":"181","endLine":38,"endColumn":34,"suggestions":"201"},{"ruleId":"168","severity":1,"message":"193","line":11,"column":41,"nodeType":"170","messageId":"171","endLine":11,"endColumn":53},{"ruleId":"168","severity":1,"message":"189","line":15,"column":37,"nodeType":"170","messageId":"171","endLine":15,"endColumn":47},{"ruleId":"168","severity":1,"message":"190","line":19,"column":47,"nodeType":"170","messageId":"171","endLine":19,"endColumn":62},{"ruleId":"175","severity":1,"message":"176","line":32,"column":28,"nodeType":"177","messageId":"178","endLine":32,"endColumn":30},{"ruleId":"175","severity":1,"message":"176","line":37,"column":38,"nodeType":"177","messageId":"178","endLine":37,"endColumn":40},{"ruleId":"179","severity":1,"message":"202","line":43,"column":6,"nodeType":"181","endLine":43,"endColumn":61,"suggestions":"203"},{"ruleId":"168","severity":1,"message":"191","line":11,"column":39,"nodeType":"170","messageId":"171","endLine":11,"endColumn":50},{"ruleId":"168","severity":1,"message":"189","line":15,"column":37,"nodeType":"170","messageId":"171","endLine":15,"endColumn":47},{"ruleId":"168","severity":1,"message":"190","line":19,"column":47,"nodeType":"170","messageId":"171","endLine":19,"endColumn":62},{"ruleId":"175","severity":1,"message":"176","line":32,"column":28,"nodeType":"177","messageId":"178","endLine":32,"endColumn":30},{"ruleId":"175","severity":1,"message":"176","line":37,"column":38,"nodeType":"177","messageId":"178","endLine":37,"endColumn":40},{"ruleId":"179","severity":1,"message":"204","line":43,"column":6,"nodeType":"181","endLine":43,"endColumn":60,"suggestions":"205"},{"ruleId":"168","severity":1,"message":"199","line":4,"column":29,"nodeType":"170","messageId":"171","endLine":4,"endColumn":42},{"ruleId":"168","severity":1,"message":"206","line":17,"column":45,"nodeType":"170","messageId":"171","endLine":17,"endColumn":59},{"ruleId":"175","severity":1,"message":"176","line":31,"column":9,"nodeType":"207","messageId":"208","endLine":31,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":38,"column":9,"nodeType":"207","messageId":"208","endLine":38,"endColumn":16},{"ruleId":"179","severity":1,"message":"209","line":42,"column":6,"nodeType":"181","endLine":42,"endColumn":35,"suggestions":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'getIdFromUrl' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["213"],["211"],["212"],"'Species' is defined but never used.","'SingleSpecies' is defined but never used.","'Planets' is defined but never used.","'SinglePlanet' is defined but never used.","'filmsError' is assigned a value but never used.","'charactersError' is assigned a value but never used.","'planetError' is assigned a value but never used.","'starshipError' is assigned a value but never used.","'speciesError' is assigned a value but never used.","'filmError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'charactersMap', 'filmInfo', 'planetsMap', and 'starshipsMap'. Either include them or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["215"],"'useAllResults' is defined but never used.","React Hook useEffect has missing dependencies: 'charactersMap', 'filmsMap', and 'starshipInfo'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'charactersInfo', 'filmsInfo', 'speciesInfo.films', 'speciesInfo.length', and 'speciesInfo.people'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has missing dependencies: 'charactersInfo', 'filmsInfo', 'planetInfo.films', 'planetInfo.length', and 'planetInfo.residents'. Either include them or remove the dependency array.",["218"],"'characterError' is assigned a value but never used.","ReturnStatement","expectedReturnValue","React Hook useEffect has missing dependencies: 'characterInfo', 'filmsMap', and 'starshipsMap'. Either include them or remove the dependency array.",["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [id]",{"range":"234","text":"235"},"Update the dependencies array to be: [charactersMap, filmInfo, isLoadingFilm, isReady, planetsMap, starshipsMap]",{"range":"236","text":"237"},"Update the dependencies array to be: [url]",{"range":"238","text":"239"},"Update the dependencies array to be: [charactersMap, filmsMap, isLoadingStarship, isReady, starshipInfo]",{"range":"240","text":"241"},"Update the dependencies array to be: [isLoadingSpecies, isLoadingFilms, isLoadingCharacters, speciesInfo.length, speciesInfo.films, speciesInfo.people, filmsInfo, charactersInfo]",{"range":"242","text":"243"},"Update the dependencies array to be: [isLoadingPlanet, isLoadingFilms, isLoadingCharacters, planetInfo.length, planetInfo.films, planetInfo.residents, filmsInfo, charactersInfo]",{"range":"244","text":"245"},"Update the dependencies array to be: [characterInfo, filmsMap, isLoadingCharacter, isReady, starshipsMap]",{"range":"246","text":"247"},[1063,1065],"[id]",[1486,1510],"[charactersMap, filmInfo, isLoadingFilm, isReady, planetsMap, starshipsMap]",[1374,1376],"[url]",[1335,1363],"[charactersMap, filmsMap, isLoadingStarship, isReady, starshipInfo]",[1325,1380],"[isLoadingSpecies, isLoadingFilms, isLoadingCharacters, speciesInfo.length, speciesInfo.films, speciesInfo.people, filmsInfo, charactersInfo]",[1320,1374],"[isLoadingPlanet, isLoadingFilms, isLoadingCharacters, planetInfo.length, planetInfo.films, planetInfo.residents, filmsInfo, charactersInfo]",[1370,1399],"[characterInfo, filmsMap, isLoadingCharacter, isReady, starshipsMap]"]