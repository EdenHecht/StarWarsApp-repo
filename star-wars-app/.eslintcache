[{"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\index.js":"1","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\App.js":"2","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\utils\\utils.js":"3","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\Nav.js":"4","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\hooks\\hooks.js":"5","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\characters\\SingleCharacter.js":"6","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\characters\\Characters.js":"7","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\films\\SingleFilm.js":"8","C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\films\\Films.js":"9","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\index.js":"10","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\App.js":"11","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\Nav.js":"12","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\characters\\SingleCharacter.js":"13","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\characters\\Characters.js":"14","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\films\\SingleFilm.js":"15","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\films\\Films.js":"16","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\utils\\utils.js":"17","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\hooks\\hooks.js":"18","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\starships\\Starships.js":"19","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\starships\\SingleStarship.js":"20","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\species\\SingleSpecies.js":"21","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\species\\Species.js":"22","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\planets\\Planets.js":"23","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\planets\\SinglePlanet.js":"24"},{"size":153,"mtime":1607431544840,"results":"25","hashOfConfig":"26"},{"size":884,"mtime":1607537889823,"results":"27","hashOfConfig":"26"},{"size":172,"mtime":1607515338285,"results":"28","hashOfConfig":"26"},{"size":293,"mtime":1607515441153,"results":"29","hashOfConfig":"26"},{"size":161,"mtime":1607536799337,"results":"30","hashOfConfig":"26"},{"size":1447,"mtime":1607537900496,"results":"31","hashOfConfig":"26"},{"size":1179,"mtime":1607537754522,"results":"32","hashOfConfig":"26"},{"size":665,"mtime":1607537846918,"results":"33","hashOfConfig":"26"},{"size":1104,"mtime":1607537804884,"results":"34","hashOfConfig":"26"},{"size":153,"mtime":1607431544840,"results":"35","hashOfConfig":"36"},{"size":5173,"mtime":1608716774350,"results":"37","hashOfConfig":"36"},{"size":1979,"mtime":1607945752882,"results":"38","hashOfConfig":"36"},{"size":2645,"mtime":1607959363852,"results":"39","hashOfConfig":"36"},{"size":1303,"mtime":1607958977844,"results":"40","hashOfConfig":"36"},{"size":4127,"mtime":1608716705309,"results":"41","hashOfConfig":"36"},{"size":5620,"mtime":1608889801327,"results":"42","hashOfConfig":"36"},{"size":387,"mtime":1608716724578,"results":"43","hashOfConfig":"36"},{"size":1419,"mtime":1607597510532,"results":"44","hashOfConfig":"36"},{"size":644,"mtime":1607594494237,"results":"45","hashOfConfig":"36"},{"size":2729,"mtime":1607879070085,"results":"46","hashOfConfig":"36"},{"size":2217,"mtime":1607608184707,"results":"47","hashOfConfig":"36"},{"size":633,"mtime":1607595440698,"results":"48","hashOfConfig":"36"},{"size":629,"mtime":1607606873710,"results":"49","hashOfConfig":"36"},{"size":2638,"mtime":1607608461070,"results":"50","hashOfConfig":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1493bba",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1bqzyod",{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\index.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\App.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\utils\\utils.js",[],["108","109"],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\Nav.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\hooks\\hooks.js",["110","111","112","113"],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\characters\\SingleCharacter.js",["114","115"],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\characters\\Characters.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\films\\SingleFilm.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsReact\\star-wars-app\\src\\components\\films\\Films.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\index.js",[],["116","117"],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\App.js",["118","119","120","121"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SingleCharacter from \"./components/characters/SingleCharacter\";\nimport SingleFilm from \"./components/films/SingleFilm\";\nimport Characters from \"./components/characters/Characters\";\nimport Films from \"./components/films/Films\";\nimport Starships from \"./components/starships/Starships\";\nimport SingleStarship from \"./components/starships/SingleStarship\";\nimport Species from \"./components/species/Species\";\nimport SingleSpecies from \"./components/species/SingleSpecies\";\nimport Planets from \"./components/planets/Planets\";\nimport SinglePlanet from \"./components/planets/SinglePlanet\";\nimport Nav from \"./components/Nav\";\nimport { useAllResults } from \"./hooks/hooks\";\n\nexport default function App() {\n  const [characters, setCharacters] = useState({});\n  const [films, setFilms] = useState({});\n  const [planets, setPlanets] = useState({});\n  const [starships, setStarships] = useState({});\n  const [isReady, setIsReady] = useState(false);\n\n  const [isLoadingFilms, filmsInfo, filmsError] = useAllResults(\n    \"https://swapi.dev/api/films/\"\n  );\n\n  const [isLoadingCharacters, charactersInfo, charactersError] = useAllResults(\n    \"https://swapi.dev/api/people/\"\n  );\n\n  const [isLoadingPlanets, planetsInfo, planetError] = useAllResults(\n    \"https://swapi.dev/api/planets/\"\n  );\n\n  const [isLoadingStarships, starshipsInfo, starshipError] = useAllResults(\n    \"https://swapi.dev/api/starships/\"\n  );\n\n  useEffect(() => {\n    if (\n      !isReady &&\n      Object.keys(films).length !== 0 &&\n      Object.keys(characters).length !== 0 &&\n      Object.keys(planets).length !== 0 &&\n      Object.keys(starships).length !== 0\n    ) {\n      console.log(\"planets: \", planets);\n      console.log(\"films: \", films);\n      console.log(\"starships: \", starships);\n      console.log(\"characters: \", characters);\n\n      setIsReady(true);\n    }\n  }, [isReady, films, characters, planets, starships]);\n\n  useEffect(() => {\n    if (!isLoadingFilms && filmsInfo.length !== 0) {\n      filmsInfo.map((film) =>\n        setFilms((prevVal) => {\n          let newDict = { ...prevVal };\n          newDict[film.id] = {\n            id: film.id,\n            title: film.title,\n            url: film.url,\n            imagePath: \"\",\n          };\n          return newDict;\n        })\n      );\n    }\n  }, [isLoadingFilms, filmsInfo]);\n\n  useEffect(() => {\n    if (!isLoadingStarships && starshipsInfo.length !== 0) {\n      starshipsInfo.map((starship) =>\n        setStarships((prevVal) => {\n          let newDict = { ...prevVal };\n          newDict[starship.id] = {\n            id: starship.id,\n            name: starship.name,\n            url: starship.url,\n            imagePath: \"\",\n          };\n          return newDict;\n        })\n      );\n    }\n  }, [isLoadingStarships, starshipsInfo]);\n\n  useEffect(() => {\n    if (!isLoadingCharacters && charactersInfo.length !== 0) {\n      charactersInfo.map((character) =>\n        setCharacters((prevVal) => {\n          let newDict = { ...prevVal };\n          newDict[character.id] = {\n            id: character.id,\n            name: character.name,\n            url: character.url,\n            imagePath: \"\",\n          };\n          return newDict;\n        })\n      );\n    }\n  }, [isLoadingCharacters, charactersInfo]);\n\n  useEffect(() => {\n    if (!isLoadingPlanets && planetsInfo.length !== 0) {\n      planetsInfo.map((planet) =>\n        setPlanets((prevVal) => {\n          let newDict = { ...prevVal };\n          newDict[planet.id] = {\n            id: planet.id,\n            name: planet.name,\n            url: planet.url,\n            imagePath: \"\",\n          };\n          return newDict;\n        })\n      );\n    }\n  }, [isLoadingPlanets, planetsInfo]);\n\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route path=\"/characters\" exact>\n            <Characters />\n          </Route>\n          <Route path=\"/films\" exact>\n            <Films\n              filmsInfo={filmsInfo}\n              charactersMap={characters}\n              planetsMap={planets}\n              starshipsMap={starships}\n              isReady={isReady}\n            />\n          </Route>\n          <Route path=\"/starships\" exact>\n            <Starships />\n          </Route>\n          <Route path=\"/species\" exact>\n            <Species />\n          </Route>\n          <Route path=\"/planets\" exact>\n            <Planets />\n          </Route>\n          <Route path={`/character/:id`} exact>\n            <SingleCharacter />\n          </Route>\n          <Route path={`/film/:id`} exact>\n            <SingleFilm\n              charactersMap={characters}\n              planetsMap={planets}\n              starshipsMap={starships}\n              isReady={isReady}\n            />\n          </Route>\n          <Route path={`/starship/:id`} exact>\n            <SingleStarship />\n          </Route>\n          <Route path={`/species/:id`} exact>\n            <SingleSpecies />\n          </Route>\n          <Route path={`/planets/:id`} exact>\n            <SinglePlanet />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\Nav.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\characters\\SingleCharacter.js",["122","123","124"],"import { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpecificResult, useAllResults } from \"../../hooks/hooks\";\r\n\r\nfunction SingleCharacter(props) {\r\n  const { id } = useParams();\r\n  const [films, setFilms] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  const [isLoadingCharacter, characterInfo, characterError] = useSpecificResult(\r\n    `https://swapi.dev/api/people/${id}`\r\n  );\r\n\r\n  const [isLoadingFilms, filmsInfo, filmsError] = useAllResults(\r\n    \"https://swapi.dev/api/films/\"\r\n  );\r\n\r\n  const [isLoadingStarships, starshipsInfo, starshipsError] = useAllResults(\r\n    \"https://swapi.dev/api/starships/\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isLoadingCharacter &&\r\n      !isLoadingFilms &&\r\n      !isLoadingStarships &&\r\n      characterInfo.length !== 0 &&\r\n      filmsInfo.length !== 0 &&\r\n      starshipsInfo.length !== 0\r\n    ) {\r\n      filmsInfo.map((film) => {\r\n        if (characterInfo.films.includes(film.url)) {\r\n          setFilms((prevArr) => [...prevArr, film]);\r\n        }\r\n        return;\r\n      });\r\n\r\n      starshipsInfo.map((starship) => {\r\n        if (characterInfo.starships.includes(starship.url)) {\r\n          setStarships((prevArr) => [...prevArr, starship]);\r\n        }\r\n        return;\r\n      });\r\n      setIsReady(true);\r\n    }\r\n  }, [isLoadingCharacter, isLoadingFilms, isLoadingStarships]);\r\n\r\n  return (\r\n    <div>\r\n      {!isReady ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <div>\r\n          <p>name: {characterInfo.name}</p>\r\n          <p>height: {characterInfo.height}</p>\r\n          <p>mass: {characterInfo.mass}</p>\r\n          <p>gender: {characterInfo.gender}</p>\r\n          <p>name: {characterInfo.name}</p>\r\n\r\n          {films.length !== 0 ? (\r\n            <span>\r\n              <p>films</p>\r\n              {films.map((film) => (\r\n                <p key={film.title}>\r\n                  <Link to={`/film/${film.id}`}>{film.title}</Link>\r\n                </p>\r\n              ))}\r\n            </span>\r\n          ) : null}\r\n\r\n          {starships.length !== 0 ? (\r\n            <span>\r\n              <p>starships</p>\r\n              {starships.map((starship) => (\r\n                <p key={starship.name}>\r\n                  <Link to={`/starship/${starship.id}`}>{starship.name}</Link>\r\n                </p>\r\n              ))}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n      {characterError}\r\n      {filmsError}\r\n      {starshipsError}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleCharacter;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\characters\\Characters.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\films\\SingleFilm.js",["125","126","127","128","129","130"],"import { useParams, Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport poster from \"../../utils/resources/posters/a new hope.jpg\";\r\nimport { useSpecificResult, useAllResults } from \"../../hooks/hooks\";\r\nimport \"./SingleFilm.css\";\r\n\r\nfunction SingleFilm(props) {\r\n  const { id } = useParams();\r\n  const { charactersMap, planetsMap, starshipsMap, isReady } = props;\r\n  const [characters, setCharacters] = useState([]);\r\n  const [planets, setPlanets] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n  const [isAllReady, setIsAllReady] = useState(false);\r\n\r\n  const [isLoadingFilm, filmInfo, fileError] = useSpecificResult(\r\n    `https://swapi.dev/api/films/${id}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!isLoadingFilm && Object.keys(filmInfo).length !== 0 && isReady) {\r\n      Object.values(charactersMap).map((character) => {\r\n        if (filmInfo.characters.includes(character.url)) {\r\n          setCharacters((prevArr) => [...prevArr, character]);\r\n        }\r\n      });\r\n      Object.values(starshipsMap).map((starship) => {\r\n        if (filmInfo.starships.includes(starship.url)) {\r\n          setStarships((prevArr) => [...prevArr, starship]);\r\n        }\r\n      });\r\n      Object.values(planetsMap).map((planet) => {\r\n        if (filmInfo.planets.includes(planet.url)) {\r\n          setPlanets((prevArr) => [...prevArr, planet]);\r\n        }\r\n      });\r\n      setIsAllReady(true);\r\n    }\r\n  }, [isLoadingFilm, isReady]);\r\n\r\n  return (\r\n    <div>\r\n      {!isAllReady ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <div className=\"content-info\">\r\n          <div className=\"poster-container\">\r\n            <div className=\"poster-circle single-circ\">\r\n              <div id=\"img-design\">\r\n                <img className=\"poster-img single-img\" src={poster} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"film-container\">\r\n            <div className=\"left-info-col\">\r\n              <h1 className=\"film-name-header\">{filmInfo.title}</h1>\r\n              <div className=\"ep-dir-row\">\r\n                <div className=\"extra-r-padd\">\r\n                  Episode: {filmInfo.episode_id}\r\n                </div>\r\n                <div>Director: {filmInfo.director}</div>\r\n              </div>\r\n              <div>Release Date: {filmInfo.release_date}</div>\r\n            </div>\r\n            <div className=\"information-card right-info-col\">\r\n              <div className=\"circles\"></div>\r\n\r\n              {characters.length !== 0 ? (\r\n                <span className=\"info-col\">\r\n                  <p className=\"info-header\">characters</p>\r\n                  {characters.map((character) => (\r\n                    <p key={character.name + \"FilmNum\" + id}>\r\n                      <Link to={`/character/${character.id}`} className=\"link\">\r\n                        {character.name}\r\n                      </Link>\r\n                    </p>\r\n                  ))}\r\n                </span>\r\n              ) : null}\r\n\r\n              {planets.length !== 0 ? (\r\n                <span className=\"info-col\">\r\n                  <p className=\"info-header\">planets</p>\r\n                  {planets.map((planet) => (\r\n                    <p key={planet.name + \"FilmNum\" + id}>\r\n                      <Link to={`/planet/${planet.id}`} className=\"link\">\r\n                        {planet.name}\r\n                      </Link>\r\n                    </p>\r\n                  ))}\r\n                </span>\r\n              ) : null}\r\n\r\n              {starships.length !== 0 ? (\r\n                <span className=\"info-col\">\r\n                  <p className=\"info-header\">starships</p>\r\n                  {starships.map((starship) => (\r\n                    <p key={starship.name + \"FilmNum\" + id}>\r\n                      <Link to={`/starship/${starship.id}`} className=\"link\">\r\n                        {starship.name}\r\n                      </Link>\r\n                    </p>\r\n                  ))}\r\n                </span>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleFilm;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\films\\Films.js",["131","132","133"],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\utils\\utils.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\hooks\\hooks.js",["134"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { getIdFromUrl } from \"../utils/utils\";\r\n\r\nexport function useAllResults(url) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [info, setInfo] = useState([]);\r\n  const [error, setError] = useState();\r\n  const [nextPage, setNextPage] = useState(url);\r\n\r\n  useEffect(() => {\r\n    if (nextPage === null) {\r\n      setIsLoading(false);\r\n    } else {\r\n      setIsLoading(true);\r\n      axios\r\n        .get(nextPage)\r\n        .then((res) => {\r\n          let filmsInfo = res.data.results;\r\n          filmsInfo = filmsInfo.map((film) => {\r\n            const id = getIdFromUrl(film.url);\r\n            Object.assign(film, { id: id });\r\n            return film;\r\n          });\r\n          setInfo((prevArr) => [...prevArr, ...filmsInfo]);\r\n          setNextPage(res.data.next);\r\n        })\r\n        .catch((err) => setError(err));\r\n    }\r\n  }, [nextPage]);\r\n  return [isLoading, info, error];\r\n}\r\n\r\nexport function useSpecificResult(url) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [info, setInfo] = useState([]);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setInfo(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => setError(err));\r\n  }, []);\r\n  return [isLoading, info, error];\r\n}\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\starships\\Starships.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\starships\\SingleStarship.js",["135","136","137","138","139","140"],"import { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpecificResult, useAllResults } from \"../../hooks/hooks\";\r\n\r\nfunction SingleStarship() {\r\n  const { id } = useParams();\r\n  const [films, setFilms] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  const [isLoadingStarship, starshipInfo, starshipError] = useSpecificResult(\r\n    `https://swapi.dev/api/starships/${id}`\r\n  );\r\n\r\n  const [isLoadingFilms, filmsInfo, filmsError] = useAllResults(\r\n    \"https://swapi.dev/api/films/\"\r\n  );\r\n\r\n  const [isLoadingCharacters, charactersInfo, charactersError] = useAllResults(\r\n    \"https://swapi.dev/api/people/\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isLoadingStarship &&\r\n      !isLoadingFilms &&\r\n      !isLoadingCharacters &&\r\n      starshipInfo.length !== 0 &&\r\n      filmsInfo.length !== 0 &&\r\n      charactersInfo.length !== 0\r\n    ) {\r\n      filmsInfo.map((film) => {\r\n        if (starshipInfo.films.includes(film.url)) {\r\n          setFilms((prevArr) => [...prevArr, film]);\r\n        }\r\n      });\r\n      charactersInfo.map((character) => {\r\n        if (starshipInfo.pilots.includes(character.url)) {\r\n          setCharacters((prevArr) => [...prevArr, character]);\r\n        }\r\n      });\r\n      setIsReady(true);\r\n    }\r\n  }, [isLoadingStarship, isLoadingFilms, isLoadingCharacters]);\r\n\r\n  return (\r\n    <div>\r\n      {!isReady ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <div>\r\n          <p>name: {starshipInfo.name}</p>\r\n          <p>cost in credits: {starshipInfo.cost_in_credits}</p>\r\n          <p>max atmosphering speed: {starshipInfo.max_atmosphering_speed}</p>\r\n          <p>crew: {starshipInfo.crew}</p>\r\n          <p>passengers: {starshipInfo.passengers}</p>\r\n          <p>hyperdrive rating: {starshipInfo.hyperdrive_rating}</p>\r\n\r\n          {films.length !== 0 ? (\r\n            <span>\r\n              <p>films</p>\r\n              {films.map((film) => (\r\n                <p key={film.title + starshipInfo.name}>\r\n                  <Link to={`/film/${film.id}`}>{film.title}</Link>\r\n                </p>\r\n              ))}\r\n            </span>\r\n          ) : null}\r\n\r\n          {characters.length !== 0 ? (\r\n            <span>\r\n              <p>pilots</p>\r\n              {characters.map((character) => (\r\n                <p key={character.name}>\r\n                  <Link to={`/character/${character.id}`}>\r\n                    {character.name}\r\n                  </Link>\r\n                </p>\r\n              ))}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleStarship;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\species\\SingleSpecies.js",["141","142","143","144","145","146"],"import { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpecificResult, useAllResults } from \"../../hooks/hooks\";\r\n\r\nfunction SingleSpecies() {\r\n  const { id } = useParams();\r\n  const [films, setFilms] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  const [isLoadingSpecies, speciesInfo, speciesError] = useSpecificResult(\r\n    `https://swapi.dev/api/species/${id}`\r\n  );\r\n\r\n  const [isLoadingFilms, filmsInfo, filmsError] = useAllResults(\r\n    \"https://swapi.dev/api/films/\"\r\n  );\r\n\r\n  const [isLoadingCharacters, charactersInfo, charactersError] = useAllResults(\r\n    \"https://swapi.dev/api/people/\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isLoadingSpecies &&\r\n      !isLoadingFilms &&\r\n      !isLoadingCharacters &&\r\n      speciesInfo.length !== 0 &&\r\n      filmsInfo.length !== 0 &&\r\n      charactersInfo.length !== 0\r\n    ) {\r\n      filmsInfo.map((film) => {\r\n        if (speciesInfo.films.includes(film.url)) {\r\n          setFilms((prevArr) => [...prevArr, film]);\r\n        }\r\n      });\r\n      charactersInfo.map((character) => {\r\n        if (speciesInfo.people.includes(character.url)) {\r\n          setCharacters((prevArr) => [...prevArr, character]);\r\n        }\r\n      });\r\n    }\r\n  }, [isLoadingSpecies, isLoadingFilms, isLoadingCharacters]);\r\n\r\n  return (\r\n    <div>\r\n      {films.length === 0 ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <div>\r\n          <p>name: {speciesInfo.name}</p>\r\n          <p>classification: {speciesInfo.classification}</p>\r\n          <p>average height: {speciesInfo.average_height}</p>\r\n          <p>average lifespan: {speciesInfo.average_lifespan}</p>\r\n\r\n          <p>films</p>\r\n          {films.map((film) => (\r\n            <p key={film.title}>\r\n              <Link to={`/film/${film.id}`}>{film.title}</Link>\r\n            </p>\r\n          ))}\r\n          <p>people</p>\r\n          {characters.map((character) => (\r\n            <p key={character.name}>\r\n              <Link to={`/character/${character.id}`}>{character.name}</Link>\r\n            </p>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleSpecies;\r\n","C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\species\\Species.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\planets\\Planets.js",[],"C:\\Users\\edenh\\Desktop\\StarWarsApp-repo\\star-wars-app\\src\\components\\planets\\SinglePlanet.js",["147","148","149","150","151","152"],"import { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpecificResult, useAllResults } from \"../../hooks/hooks\";\r\n\r\nfunction SinglePlanet() {\r\n  const { id } = useParams();\r\n  const [films, setFilms] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  const [isLoadingPlanet, planetInfo, planetError] = useSpecificResult(\r\n    `https://swapi.dev/api/planets/${id}`\r\n  );\r\n\r\n  const [isLoadingFilms, filmsInfo, filmsError] = useAllResults(\r\n    \"https://swapi.dev/api/films/\"\r\n  );\r\n\r\n  const [isLoadingCharacters, charactersInfo, charactersError] = useAllResults(\r\n    \"https://swapi.dev/api/people/\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isLoadingPlanet &&\r\n      !isLoadingFilms &&\r\n      !isLoadingCharacters &&\r\n      planetInfo.length !== 0 &&\r\n      filmsInfo.length !== 0 &&\r\n      charactersInfo.length !== 0\r\n    ) {\r\n      filmsInfo.map((film) => {\r\n        if (planetInfo.films.includes(film.url)) {\r\n          setFilms((prevArr) => [...prevArr, film]);\r\n        }\r\n      });\r\n      charactersInfo.map((character) => {\r\n        if (planetInfo.residents.includes(character.url)) {\r\n          setCharacters((prevArr) => [...prevArr, character]);\r\n        }\r\n      });\r\n    }\r\n  }, [isLoadingPlanet, isLoadingFilms, isLoadingCharacters]);\r\n\r\n  return (\r\n    <div>\r\n      {films.length === 0 ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <div>\r\n          <p>name: {planetInfo.name}</p>\r\n          <p>population: {planetInfo.population}</p>\r\n          <p>rotation_period: {planetInfo.rotation_period}</p>\r\n          <p>orbital_period: {planetInfo.orbital_period}</p>\r\n          <p>diameter: {planetInfo.diameter}</p>\r\n          <p>climate: {planetInfo.climate}</p>\r\n          <p>diameter: {planetInfo.diameter}</p>\r\n\r\n          {films.length !== 0 ? (\r\n            <span>\r\n              <p>films</p>\r\n              {films.map((film) => (\r\n                <p key={film.title}>\r\n                  <Link to={`/film/${film.id}`}>{film.title}</Link>\r\n                </p>\r\n              ))}\r\n            </span>\r\n          ) : null}\r\n\r\n          {characters.length !== 0 ? (\r\n            <span>\r\n              <p>residents</p>\r\n              {characters.map((character) => (\r\n                <p key={character.name}>\r\n                  <Link to={`/character/${character.id}`}>\r\n                    {character.name}\r\n                  </Link>\r\n                </p>\r\n              ))}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SinglePlanet;\r\n",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":18},{"ruleId":"157","severity":1,"message":"161","line":1,"column":20,"nodeType":"159","messageId":"160","endLine":1,"endColumn":29},{"ruleId":"157","severity":1,"message":"162","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":13},{"ruleId":"157","severity":1,"message":"163","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":22},{"ruleId":"164","severity":1,"message":"165","line":19,"column":38,"nodeType":"166","messageId":"167","endLine":19,"endColumn":40},{"ruleId":"168","severity":1,"message":"169","line":32,"column":6,"nodeType":"170","endLine":32,"endColumn":8,"suggestions":"171"},{"ruleId":"153","replacedBy":"172"},{"ruleId":"155","replacedBy":"173"},{"ruleId":"157","severity":1,"message":"174","line":23,"column":37,"nodeType":"159","messageId":"160","endLine":23,"endColumn":47},{"ruleId":"157","severity":1,"message":"175","line":27,"column":47,"nodeType":"159","messageId":"160","endLine":27,"endColumn":62},{"ruleId":"157","severity":1,"message":"176","line":31,"column":41,"nodeType":"159","messageId":"160","endLine":31,"endColumn":52},{"ruleId":"157","severity":1,"message":"177","line":35,"column":45,"nodeType":"159","messageId":"160","endLine":35,"endColumn":58},{"ruleId":"164","severity":1,"message":"165","line":37,"column":9,"nodeType":"178","messageId":"179","endLine":37,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":44,"column":9,"nodeType":"178","messageId":"179","endLine":44,"endColumn":16},{"ruleId":"168","severity":1,"message":"180","line":48,"column":6,"nodeType":"170","endLine":48,"endColumn":62,"suggestions":"181"},{"ruleId":"157","severity":1,"message":"182","line":4,"column":29,"nodeType":"159","messageId":"160","endLine":4,"endColumn":42},{"ruleId":"157","severity":1,"message":"183","line":15,"column":35,"nodeType":"159","messageId":"160","endLine":15,"endColumn":44},{"ruleId":"164","severity":1,"message":"165","line":21,"column":52,"nodeType":"166","messageId":"167","endLine":21,"endColumn":54},{"ruleId":"164","severity":1,"message":"165","line":26,"column":50,"nodeType":"166","messageId":"167","endLine":26,"endColumn":52},{"ruleId":"164","severity":1,"message":"165","line":31,"column":46,"nodeType":"166","messageId":"167","endLine":31,"endColumn":48},{"ruleId":"168","severity":1,"message":"184","line":38,"column":6,"nodeType":"170","endLine":38,"endColumn":30,"suggestions":"185"},{"ruleId":"157","severity":1,"message":"161","line":2,"column":17,"nodeType":"159","messageId":"160","endLine":2,"endColumn":26},{"ruleId":"157","severity":1,"message":"182","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":23},{"ruleId":"186","severity":1,"message":"187","line":119,"column":1,"nodeType":"188","messageId":"189","endLine":154,"endColumn":2},{"ruleId":"168","severity":1,"message":"190","line":49,"column":6,"nodeType":"170","endLine":49,"endColumn":8,"suggestions":"191"},{"ruleId":"157","severity":1,"message":"177","line":12,"column":43,"nodeType":"159","messageId":"160","endLine":12,"endColumn":56},{"ruleId":"157","severity":1,"message":"174","line":16,"column":37,"nodeType":"159","messageId":"160","endLine":16,"endColumn":47},{"ruleId":"157","severity":1,"message":"175","line":20,"column":47,"nodeType":"159","messageId":"160","endLine":20,"endColumn":62},{"ruleId":"164","severity":1,"message":"165","line":33,"column":28,"nodeType":"166","messageId":"167","endLine":33,"endColumn":30},{"ruleId":"164","severity":1,"message":"165","line":38,"column":38,"nodeType":"166","messageId":"167","endLine":38,"endColumn":40},{"ruleId":"168","severity":1,"message":"192","line":45,"column":6,"nodeType":"170","endLine":45,"endColumn":62,"suggestions":"193"},{"ruleId":"157","severity":1,"message":"194","line":11,"column":41,"nodeType":"159","messageId":"160","endLine":11,"endColumn":53},{"ruleId":"157","severity":1,"message":"174","line":15,"column":37,"nodeType":"159","messageId":"160","endLine":15,"endColumn":47},{"ruleId":"157","severity":1,"message":"175","line":19,"column":47,"nodeType":"159","messageId":"160","endLine":19,"endColumn":62},{"ruleId":"164","severity":1,"message":"165","line":32,"column":28,"nodeType":"166","messageId":"167","endLine":32,"endColumn":30},{"ruleId":"164","severity":1,"message":"165","line":37,"column":38,"nodeType":"166","messageId":"167","endLine":37,"endColumn":40},{"ruleId":"168","severity":1,"message":"195","line":43,"column":6,"nodeType":"170","endLine":43,"endColumn":61,"suggestions":"196"},{"ruleId":"157","severity":1,"message":"176","line":11,"column":39,"nodeType":"159","messageId":"160","endLine":11,"endColumn":50},{"ruleId":"157","severity":1,"message":"174","line":15,"column":37,"nodeType":"159","messageId":"160","endLine":15,"endColumn":47},{"ruleId":"157","severity":1,"message":"175","line":19,"column":47,"nodeType":"159","messageId":"160","endLine":19,"endColumn":62},{"ruleId":"164","severity":1,"message":"165","line":32,"column":28,"nodeType":"166","messageId":"167","endLine":32,"endColumn":30},{"ruleId":"164","severity":1,"message":"165","line":37,"column":38,"nodeType":"166","messageId":"167","endLine":37,"endColumn":40},{"ruleId":"168","severity":1,"message":"197","line":43,"column":6,"nodeType":"170","endLine":43,"endColumn":60,"suggestions":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'getIdFromUrl' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["201"],["199"],["200"],"'filmsError' is assigned a value but never used.","'charactersError' is assigned a value but never used.","'planetError' is assigned a value but never used.","'starshipError' is assigned a value but never used.","ReturnStatement","expectedReturnValue","React Hook useEffect has missing dependencies: 'characterInfo.films', 'characterInfo.length', 'characterInfo.starships', 'filmsInfo', and 'starshipsInfo'. Either include them or remove the dependency array.",["202"],"'useAllResults' is defined but never used.","'fileError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'charactersMap', 'filmInfo', 'planetsMap', and 'starshipsMap'. Either include them or remove the dependency array.",["203"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["204"],"React Hook useEffect has missing dependencies: 'charactersInfo', 'filmsInfo', 'starshipInfo.films', 'starshipInfo.length', and 'starshipInfo.pilots'. Either include them or remove the dependency array.",["205"],"'speciesError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'charactersInfo', 'filmsInfo', 'speciesInfo.films', 'speciesInfo.length', and 'speciesInfo.people'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has missing dependencies: 'charactersInfo', 'filmsInfo', 'planetInfo.films', 'planetInfo.length', and 'planetInfo.residents'. Either include them or remove the dependency array.",["207"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [id]",{"range":"222","text":"223"},"Update the dependencies array to be: [characterInfo.films, characterInfo.length, characterInfo.starships, filmsInfo, isLoadingCharacter, isLoadingFilms, isLoadingStarships, starshipsInfo]",{"range":"224","text":"225"},"Update the dependencies array to be: [charactersMap, filmInfo, isLoadingFilm, isReady, planetsMap, starshipsMap]",{"range":"226","text":"227"},"Update the dependencies array to be: [url]",{"range":"228","text":"229"},"Update the dependencies array to be: [isLoadingStarship, isLoadingFilms, isLoadingCharacters, starshipInfo.length, starshipInfo.films, starshipInfo.pilots, filmsInfo, charactersInfo]",{"range":"230","text":"231"},"Update the dependencies array to be: [isLoadingSpecies, isLoadingFilms, isLoadingCharacters, speciesInfo.length, speciesInfo.films, speciesInfo.people, filmsInfo, charactersInfo]",{"range":"232","text":"233"},"Update the dependencies array to be: [isLoadingPlanet, isLoadingFilms, isLoadingCharacters, planetInfo.length, planetInfo.films, planetInfo.residents, filmsInfo, charactersInfo]",{"range":"234","text":"235"},[1063,1065],"[id]",[1450,1506],"[characterInfo.films, characterInfo.length, characterInfo.starships, filmsInfo, isLoadingCharacter, isLoadingFilms, isLoadingStarships, starshipsInfo]",[1454,1478],"[charactersMap, filmInfo, isLoadingFilm, isReady, planetsMap, starshipsMap]",[1374,1376],"[url]",[1410,1466],"[isLoadingStarship, isLoadingFilms, isLoadingCharacters, starshipInfo.length, starshipInfo.films, starshipInfo.pilots, filmsInfo, charactersInfo]",[1325,1380],"[isLoadingSpecies, isLoadingFilms, isLoadingCharacters, speciesInfo.length, speciesInfo.films, speciesInfo.people, filmsInfo, charactersInfo]",[1320,1374],"[isLoadingPlanet, isLoadingFilms, isLoadingCharacters, planetInfo.length, planetInfo.films, planetInfo.residents, filmsInfo, charactersInfo]"]